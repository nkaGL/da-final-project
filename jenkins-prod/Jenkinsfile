pipeline {
    agent { label 'aws-agent' }
    environment {
                AWS_ACCESS_KEY_ID = credentials('access-key')
                AWS_SECRET_ACCESS_KEY = credentials('secret-key')
                ARTIFACTORY_USER = credentials('jfrog-user')
                ARTIFACTORY_PASSWORD = credentials('jfrog-password')
                ARTIFACTORY_SERVER = credentials('jfrog-server')
    }
    stages {
        stage('Merge to Prod') {
            steps {
                sh '''
               cd /home/ec2-user/workspace/demo-pipeline/dev/da-final-project
               git checkout main
               git merge dev
               '''
            }
        }
        stage('Build') {
            steps {
                sh '''
                cd /home/ec2-user/workspace/demo-pipeline/dev/da-final-project
                git checkout main
                ./gradlew build
               '''
            }
        }
        stage('Dockerization') {
            steps {
               sh'''
                cd /home/ec2-user/workspace/demo-pipeline/dev/da-final-project
                git checkout main
                
                now=$(date +"%d%m%Y")
                BUILD_NAME=$now"-jenkins-build-prod"
                sudo docker login -u$ARTIFACTORY_USER -p $ARTIFACTORY_PASSWORD $ARTIFACTORY_SERVER
                sudo docker build -t $BUILD_NAME .
                IMAGE_ID=$(sudo docker images | grep -i $BUILD_NAME | awk '{ print $3 }')
                sudo docker tag $IMAGE_ID $ARTIFACTORY_SERVER/ninagl-docker-dev-local/dev/webapp:latest
                sudo docker push $ARTIFACTORY_SERVER/ninagl-docker-dev-local/dev/webapp:latest
                '''
            }
        }
        stage('Deployment') {
            steps {
                sh '''
                cd /home/ec2-user/workspace/demo-pipeline/dev/da-final-project/.terraform
                terraform init
                terraform apply -auto-approve
                prod-webapp_public_ip=$(terraform output -raw prod-webapp_public_ip)
                
                ssh -oStrictHostKeyChecking=no $prod-webapp_public_ip uptime
                ssh $prod-webapp_public_ip
                sudo docker pull mongo
                sudo docker run -it --rm -d --name mongo -p 27017:27017 mongo
                sudo docker login -u $ARTIFACTORY_USER -p $ARTIFACTORY_PASSWORD $ARTIFACTORY_SERVER
                sudo docker run -it --rm -d --name webapp -p 8080:8080 --net host $ARTIFACTORY_SERVER/project-docker-local/dev/webapp:latest
                exit
                '''
            }
        }
        stage('Smoke Tests') {
            steps {
              sh '''
              echo "smoke tests"
              '''
                
            }
        }
        stage('Documentation generation') {
            steps {
               sh 'echo Doxygen'
            }
        }
    }
}